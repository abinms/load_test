<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Multicart MK" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1587558208000</longProp>
        <longProp name="ThreadGroup.end_time">1587558208000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Z3JpZHVzZXI6Z3JpZHVzZXJAMTIz</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Parameters" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="REQUEST_ID1" elementType="Argument">
              <stringProp name="Argument.name">REQUEST_ID1</stringProp>
              <stringProp name="Argument.value">MULCARTNBP001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="REQUEST_ID2" elementType="Argument">
              <stringProp name="Argument.name">REQUEST_ID2</stringProp>
              <stringProp name="Argument.value">MULCARTNBP0Z2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MSISDN" elementType="Argument">
              <stringProp name="Argument.name">MSISDN</stringProp>
              <stringProp name="Argument.value">6288867543073</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ACCOUNT_ID" elementType="Argument">
              <stringProp name="Argument.name">ACCOUNT_ID</stringProp>
              <stringProp name="Argument.value">1000079814</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PROFILE_ID" elementType="Argument">
              <stringProp name="Argument.name">PROFILE_ID</stringProp>
              <stringProp name="Argument.value">501354122</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PROMO_CODE" elementType="Argument">
              <stringProp name="Argument.name">PROMO_CODE</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Subscription" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Request&quot;: {&#xd;
        &quot;request_id&quot;: &quot;${REQUEST_ID1}&quot;,&#xd;
        &quot;action&quot;: &quot;AddSubscription&quot;,&#xd;
        &quot;source_node&quot;: &quot;SmartAttacker&quot;,&#xd;
        &quot;request_timestamp&quot;: &quot;14122018140114&quot;,&#xd;
        &quot;userid&quot;: &quot;1799&quot;,&#xd;
        &quot;username&quot;: &quot;SmartAttacker&quot;,&#xd;
        &quot;order_information&quot;: {&#xd;
            &quot;order_type&quot;: &quot;AddSubscription&quot;,&#xd;
            &quot;customer_name&quot;: &quot;testerP&quot;,&#xd;
            &quot;service_subscription&quot;: {&#xd;
                &quot;service_id&quot;: &quot;${MSISDN}&quot;,&#xd;
                &quot;group_id&quot;: &quot;&quot;,&#xd;
                &quot;subscription_change_date&quot;: &quot;12042019000000&quot;,&#xd;
                &quot;subscriptions&quot;: [&#xd;
                    {&#xd;
                        &quot;plan_id&quot;: &quot;10217&quot;,&#xd;
                        &quot;plan_name&quot;: &quot;topping Facebook 3 GB&quot;,&#xd;
                        &quot;plan_desc&quot;: &quot;NBP Plan&quot;,&#xd;
                        &quot;charge_code&quot;: &quot;&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;plan_id&quot;: &quot;10245&quot;,&#xd;
                        &quot;plan_name&quot;: &quot;topping MobileLegend 500 MB&quot;,&#xd;
                        &quot;plan_desc&quot;: &quot;NBP Plan&quot;,&#xd;
                        &quot;charge_code&quot;: &quot;&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;plan_id&quot;: &quot;10248&quot;,&#xd;
                        &quot;plan_name&quot;: &quot;topping PUBG 500 MB&quot;,&#xd;
                        &quot;plan_desc&quot;: &quot;NBP Plan&quot;,&#xd;
                        &quot;charge_code&quot;: &quot;&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;dataset&quot;: {&#xd;
                &quot;param&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;entity_id&quot;,&#xd;
                        &quot;value&quot;: &quot;200&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;upfront_payment&quot;,&#xd;
                        &quot;value&quot;: &quot;yes&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;account_id&quot;,&#xd;
                        &quot;value&quot;: &quot;${ACCOUNT_ID}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;profile_id&quot;,&#xd;
                        &quot;value&quot;: &quot;${PROFILE_ID}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;ma_deduction&quot;,&#xd;
                        &quot;value&quot;: &quot;no&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;promo_code&quot;,&#xd;
                        &quot;value&quot;: &quot;${PROMO_CODE}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;addOnType&quot;,&#xd;
                        &quot;value&quot;: &quot;1&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">10001</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIGateway/APIRequest/Submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <fileName>true</fileName>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ORDER_ID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.Response.dataSet.param[0].value</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MakePayment" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Request&quot;: {&#xd;
        &quot;request_id&quot;: &quot;${REQUEST_ID2}&quot;,&#xd;
        &quot;request_timestamp&quot;: &quot;30122018210252&quot;,&#xd;
        &quot;action&quot;: &quot;MakePayment&quot;,&#xd;
        &quot;source_node&quot;: &quot;SmartAttacker&quot;,&#xd;
        &quot;userid&quot;: &quot;1799&quot;,&#xd;
        &quot;username&quot;: &quot;SmartAttacker&quot;,&#xd;
        &quot;order_information&quot;: {&#xd;
            &quot;order_type&quot;: &quot;MakePayment&quot;,&#xd;
            &quot;customer_name&quot;: &quot;tester&quot;,&#xd;
            &quot;payment&quot;: {&#xd;
                &quot;profile_id&quot;: &quot;${PROFILE_ID}&quot;,&#xd;
                &quot;account_id&quot;: &quot;${ACCOUNT_ID}&quot;,&#xd;
                &quot;amount&quot;: &quot;8000.0&quot;,&#xd;
                &quot;amount_paid&quot;: &quot;&quot;,&#xd;
                &quot;order_type&quot;: &quot;&quot;,&#xd;
                &quot;collection_source_type&quot;: &quot;&quot;,&#xd;
                &quot;collection_id&quot;: &quot;&quot;,&#xd;
                &quot;comment&quot;: &quot;Ok&quot;,&#xd;
                &quot;currency_code&quot;: &quot;IDR&quot;,&#xd;
                &quot;card_number&quot;: &quot;&quot;,&#xd;
                &quot;invoice_ids&quot;: &quot;&quot;,&#xd;
                &quot;invoice_amounts&quot;: &quot;&quot;,&#xd;
                &quot;payment_detail&quot;: [&#xd;
                    {&#xd;
                        &quot;payment_mode&quot;: &quot;9&quot;,&#xd;
                        &quot;reference_external_id&quot;: &quot;2001&quot;,&#xd;
                        &quot;amount_paid&quot;: &quot;8000.0&quot;,&#xd;
                        &quot;amount_description&quot;: &quot;card payment&quot;,&#xd;
                        &quot;mode_detail&quot;: [&#xd;
                            {&#xd;
                                &quot;key&quot;: &quot;payment_subscriber_id&quot;,&#xd;
                                &quot;value&quot;: &quot;&quot;&#xd;
                            }&#xd;
                        ]&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;dataset&quot;: {&#xd;
                &quot;param&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;entity_id&quot;,&#xd;
                        &quot;value&quot;: &quot;200&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;order_id&quot;,&#xd;
                        &quot;value&quot;: &quot;${ORDER_ID}&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;id&quot;: &quot;service_id&quot;,&#xd;
                        &quot;value&quot;: &quot;${MSISDN}&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">10001</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIGateway/APIRequest/Submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
